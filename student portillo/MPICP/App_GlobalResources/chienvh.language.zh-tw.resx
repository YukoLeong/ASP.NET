<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="choose1" xml:space="preserve">
    <value>表格方式招聘</value>
  </data>
  <data name="choose2" xml:space="preserve">
    <value>上載檔案招聘</value>
  </data>
  <data name="langEnglish" xml:space="preserve">
    <value>英文</value>
  </data>
  <data name="langVietnamese" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="mess1_1" xml:space="preserve">
    <value>編寫招聘表格或&lt;br/&gt;上載PDF檔案。</value>
  </data>
  <data name="mess1_2" xml:space="preserve">
    <value>您是否經常花太多時間篩選不相關的求職者？&lt;br /&gt;您是否仍使用傳統方式接收求職申請及處理招聘流程？&lt;br /&gt;立即使用我們理工全新的智能招聘系統，以智慧型配對技術為您節省招聘時間之餘，更可有效率地為您找到合適人才。&lt;br /&gt;</value>
  </data>
  <data name="mess2_1" xml:space="preserve">
    <value>更新和編輯招聘資訊。</value>
  </data>
  <data name="mess2_2" xml:space="preserve">
    <value>您是否經常煩腦不能夠隨時更新招聘的資訊？&lt;br /&gt;您是否令你的招聘資訊隨時隨地合乎你公司的要求？&lt;br /&gt;在這裡你可以隨時更新你的招聘訊息和檔案，全力支援你的各種其他招聘需求，讓您輕鬆快捷地完成整個網上招聘過程&lt;br /&gt;</value>
  </data>
  <data name="miku01" xml:space="preserve">
    <value>歡迎來到理工學院企業招聘系統</value>
  </data>
  <data name="miku02" xml:space="preserve">
    <value>登入</value>
  </data>
  <data name="miku03" xml:space="preserve">
    <value>註冊</value>
  </data>
  <data name="miku04" xml:space="preserve">
    <value>企業招聘</value>
  </data>
  <data name="miku05" xml:space="preserve">
    <value>招聘管理</value>
  </data>
  <data name="mnuContactUs" xml:space="preserve">
    <value>聯絡我</value>
  </data>
  <data name="mnuHome" xml:space="preserve">
    <value>首頁</value>
  </data>
  <data name="mnuIntroduction" xml:space="preserve">
    <value>介紹</value>
  </data>
  <data name="mnuProduct" xml:space="preserve">
    <value>產品</value>
  </data>
  <data name="testlan1" xml:space="preserve">
    <value>這是中文</value>
  </data>
</root>